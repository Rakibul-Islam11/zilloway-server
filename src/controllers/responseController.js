const errorResponse = (res, { statusCode = 500, message = "Internal Server Error" } = {}) => {
    return res.status(statusCode).json({
        success: false,
        message: message,
    });
};

const successResponse = (res, { statusCode = 200, message = "success", payload={} } = {}) => {
    return res.status(statusCode).json({
        success: true,
        message: message,
        payload
    });
};

module.exports = { errorResponse, successResponse };














// üìù ‡¶¨‡¶ø‡¶∂‡ßç‡¶≤‡ßá‡¶∑‡¶£
// 1. ‡¶´‡¶æ‡¶Ç‡¶∂‡¶® ‡¶°‡¶ø‡¶´‡¶ø‡¶®‡¶ø‡¶∂‡¶®
// const errorResponse = (res, { statusCode = 500, message = "Internal Server Error" } = {}) => { ... }


// errorResponse ‡¶π‡¶≤‡ßã ‡¶è‡¶ï‡¶ü‡¶ø Arrow Function‡•§

// ‡¶è‡¶ü‡¶ø ‡¶¶‡ßÅ‡¶á‡¶ü‡¶æ parameter ‡¶®‡ßá‡ßü:

// res ‚Üí Express ‡¶è‡¶∞ response object‡•§

// { statusCode = 500, message = "Internal Server Error" } = { } ‚Üí ‡¶è‡¶ü‡¶ø ‡¶è‡¶ï‡¶ü‡¶ø destructured object parameter‡•§

// 2. Destructured Object Parameter
// { statusCode = 500, message = "Internal Server Error" } = { }


// ‡¶è‡¶ñ‡¶æ‡¶®‡ßá ‡¶¶‡ßç‡¶¨‡¶ø‡¶§‡ßÄ‡ßü parameter ‡¶ü‡¶æ object ‡¶Ü‡¶ï‡¶æ‡¶∞‡ßá ‡¶®‡¶ø‡¶§‡ßá ‡¶π‡¶ö‡ßç‡¶õ‡ßá‡•§

// Object ‡¶è‡¶∞ ‡¶Æ‡¶ß‡ßç‡¶Ø‡ßá ‡¶¶‡ßÅ‡¶á‡¶ü‡¶æ key ‡¶®‡ßá‡¶ì‡ßü‡¶æ ‡¶π‡¶ö‡ßç‡¶õ‡ßá:

// statusCode ‚Üí default ‡¶Æ‡¶æ‡¶® 500‡•§

// message ‚Üí default ‡¶Æ‡¶æ‡¶® "Internal Server Error"‡•§

// = { } ‡¶Æ‡¶æ‡¶®‡ßá ‡¶π‡¶≤‡ßã fallback ‚Üí ‡¶Ø‡¶¶‡¶ø ‡¶¶‡ßç‡¶¨‡¶ø‡¶§‡ßÄ‡ßü argument ‡¶è‡¶ï‡¶¶‡¶Æ‡¶á ‡¶®‡¶æ ‡¶¶‡ßá‡¶ì‡ßü‡¶æ ‡¶π‡ßü ‡¶§‡¶æ‡¶π‡¶≤‡ßá empty object ‡¶ß‡¶∞‡ßá ‡¶®‡ßá‡¶ì‡ßü‡¶æ ‡¶π‡¶¨‡ßá‡•§

// 3. Default Value Logic

// ‡¶Ø‡¶¶‡¶ø function ‡¶ï‡ßá ‡¶°‡¶æ‡¶ï‡¶æ ‡¶π‡ßü:

// errorResponse(res);


// ‡¶§‡¶ñ‡¶® ‡¶¶‡ßç‡¶¨‡¶ø‡¶§‡ßÄ‡ßü argument ‡¶®‡¶æ‡¶á ‚Üí fallback ‡¶π‡¶ø‡¶∏‡ßá‡¶¨‡ßá { } ‡¶¨‡¶∏‡¶¨‡ßá‡•§
// statusCode ‚Üí 500,
//     message ‚Üí "Internal Server Error"‡•§

// ‡¶Ø‡¶¶‡¶ø function ‡¶ï‡ßá ‡¶°‡¶æ‡¶ï‡¶æ ‡¶π‡ßü:

// errorResponse(res, { statusCode: 404, message: "Not Found" });


// ‡¶§‡¶æ‡¶π‡¶≤‡ßá ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶¶‡ßá‡¶ì‡ßü‡¶æ ‡¶Æ‡¶æ‡¶® ‡¶¨‡¶∏‡¶¨‡ßá‡•§
// statusCode ‚Üí 404,
//     message ‚Üí "Not Found"‡•§

// 4. Function Body
// return res.status(statusCode).json({
//     success: false,
//     message: message,
// });


// ‡¶è‡¶ñ‡¶æ‡¶®‡ßá Express ‡¶è‡¶∞ res object ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßá response ‡¶™‡¶æ‡¶†‡¶æ‡¶®‡ßã ‡¶π‡¶ö‡ßç‡¶õ‡ßá‡•§

// .status(statusCode) ‚Üí HTTP status code ‡¶∏‡ßá‡¶ü ‡¶ï‡¶∞‡¶õ‡ßá(‡¶Ø‡ßá‡¶Æ‡¶® 404, 500, ‡¶á‡¶§‡ßç‡¶Ø‡¶æ‡¶¶‡¶ø)‡•§

// .json({ ... }) ‚Üí JSON response ‡¶™‡¶æ‡¶†‡¶æ‡¶ö‡ßç‡¶õ‡ßá‡•§

// ‡¶´‡¶æ‡¶á‡¶®‡¶æ‡¶≤ ‡¶∞‡ßá‡¶∏‡¶™‡¶®‡ßç‡¶∏ ‡¶∏‡¶¨‡¶∏‡¶Æ‡ßü ‡¶è‡¶∞‡¶ï‡¶Æ ‡¶π‡¶¨‡ßá:

// {
//     "success": false,
//         "message": "Internal Server Error"
// }


// (‡¶Ö‡¶¨‡¶∂‡ßç‡¶Ø‡¶á ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶¶‡ßá‡¶ì‡ßü‡¶æ message ‡¶Ö‡¶®‡ßÅ‡¶Ø‡¶æ‡ßü‡ßÄ ‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡¶ø‡¶§ ‡¶π‡¶¨‡ßá‡•§)

// 5. Export
// module.exports = errorResponse;


// ‡¶è‡¶ñ‡¶æ‡¶®‡ßá errorResponse function ‡¶ü‡¶æ‡¶ï‡ßá export ‡¶ï‡¶∞‡¶æ ‡¶π‡¶ö‡ßç‡¶õ‡ßá‡•§

// ‡¶Ø‡¶æ‡¶§‡ßá ‡¶Ö‡¶®‡ßç‡¶Ø ‡¶´‡¶æ‡¶á‡¶≤ ‡¶•‡ßá‡¶ï‡ßá require("./errorResponse") ‡¶¶‡¶ø‡ßü‡ßá ‡¶è‡¶ü‡¶æ ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶æ ‡¶Ø‡¶æ‡ßü‡•§

// ‚úÖ ‡¶∏‡¶æ‡¶∞‡¶æ‡¶Ç‡¶∂(‡¶®‡ßã‡¶ü ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶Æ‡¶§‡ßã)

// errorResponse ‡¶è‡¶ï‡¶ü‡¶ø arrow function, express ‡¶è‡¶∞ error response ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø‡•§

// Parameter 1 ‚Üí res(Express ‡¶è‡¶∞ response object)‡•§

// Parameter 2 ‚Üí destructured object ‚Üí statusCode(default 500), message(default "Internal Server Error")‡•§

// = {  } fallback ‡¶∞‡¶æ‡¶ñ‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá ‡¶Ø‡ßá‡¶® ‡¶¶‡ßç‡¶¨‡¶ø‡¶§‡ßÄ‡ßü argument ‡¶®‡¶æ ‡¶¶‡¶ø‡¶≤‡ßá‡¶ì error ‡¶®‡¶æ ‡¶π‡ßü‡•§

// Function ‡¶∏‡¶¨‡¶∏‡¶Æ‡ßü JSON return ‡¶ï‡¶∞‡¶¨‡ßá ‚Üí { success: false, message: "..." }‡•§

// module.exports ‡¶è‡¶∞ ‡¶Æ‡¶æ‡¶ß‡ßç‡¶Ø‡¶Æ‡ßá ‡¶Ö‡¶®‡ßç‡¶Ø ‡¶´‡¶æ‡¶á‡¶≤‡ßá ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞‡¶Ø‡ßã‡¶ó‡ßç‡¶Ø ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá‡•§

// üëâ ‡¶è‡¶á‡¶ü‡¶æ basically ‡¶è‡¶ï‡¶ü‡¶æ reusable error handler function